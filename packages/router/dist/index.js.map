{"version":3,"sources":["../src/router.tsx","../src/components.tsx"],"names":["createBrowserHistory","createContext","useState","useEffect","jsx","useContext"],"mappings":";;;;;;;AAOO,IAAM,SAAN,MAAa;AAAA,EAMlB,YAAY,OAAwB,EAAA;AAClC,IAAA,IAAA,CAAK,UAAUA,4BAAqB,EAAA;AACpC,IAAA,IAAA,CAAK,SAAS,OAAQ,CAAA,MAAA;AACtB,IAAK,IAAA,CAAA,WAAA,uBAAkB,GAAI,EAAA;AAE3B,IAAA,IAAA,CAAK,KAAQ,GAAA;AAAA,MACX,QAAA,EAAU,KAAK,OAAQ,CAAA,QAAA;AAAA,MACvB,UAAA,EAAY,EAAE,KAAA,EAAO,MAAO,EAAA;AAAA,MAC5B,YAAY,EAAC;AAAA,MACb,YAAY,EAAC;AAAA,MACb,QAAQ;AAAC,KACX;AAEA,IAAA,IAAA,CAAK,OAAQ,CAAA,MAAA,CAAO,CAAC,EAAE,UAA8C,KAAA;AACnE,MAAA,IAAA,CAAK,SAAS,QAAQ,CAAA;AAAA,KACvB,CAAA;AAAA;AACH,EAEA,MAAa,SAAS,QAAoB,EAAA;AACxC,IAAA,IAAA,CAAK,QAAS,CAAA;AAAA,MACZ,GAAG,IAAK,CAAA,KAAA;AAAA,MACR,UAAY,EAAA,EAAE,KAAO,EAAA,SAAA,EAAW,QAAS;AAAA,KAC1C,CAAA;AAED,IAAM,MAAA,OAAA,GAAU,IAAK,CAAA,WAAA,CAAY,QAAQ,CAAA;AACzC,IAAA,MAAM,aAAsC,EAAC;AAC7C,IAAA,MAAM,SAAkC,EAAC;AAEzC,IAAA,KAAA,MAAW,SAAS,OAAS,EAAA;AAC3B,MAAA,MAAM,QAAQ,KAAM,CAAA,KAAA;AACpB,MAAA,IAAI,MAAM,MAAQ,EAAA;AAChB,QAAI,IAAA;AACF,UAAA,UAAA,CAAW,MAAM,EAAM,IAAA,KAAA,CAAM,IAAI,CAAI,GAAA,MAAM,MAAM,MAAO,EAAA;AAAA,iBACjD,KAAO,EAAA;AACd,UAAA,MAAA,CAAO,KAAM,CAAA,EAAA,IAAM,KAAM,CAAA,IAAI,CAAI,GAAA,KAAA;AAAA;AACnC;AACF;AAGF,IAAA,IAAA,CAAK,QAAS,CAAA;AAAA,MACZ,QAAA;AAAA,MACA,UAAA,EAAY,EAAE,KAAA,EAAO,MAAO,EAAA;AAAA,MAC5B,UAAA;AAAA,MACA,YAAY,EAAC;AAAA,MACb;AAAA,KACD,CAAA;AAAA;AACH,EAEQ,YACN,QAC0D,EAAA;AAG1D,IAAA,OAAO,KAAK,MACT,CAAA,MAAA,CAAO,CAAC,KAAU,KAAA,KAAA,CAAM,SAAS,QAAS,CAAA,QAAQ,CAClD,CAAA,GAAA,CAAI,CAAC,KAAW,MAAA,EAAE,OAAO,MAAQ,EAAA,IAAK,CAAA,CAAA;AAAA;AAC3C,EAEQ,SAAS,QAAuB,EAAA;AACtC,IAAA,IAAA,CAAK,KAAQ,GAAA,QAAA;AACb,IAAA,IAAA,CAAK,WAAY,CAAA,OAAA,CAAQ,CAAC,UAAA,KAAe,YAAY,CAAA;AAAA;AACvD,EAEA,UAAU,QAAsB,EAAA;AAC9B,IAAK,IAAA,CAAA,WAAA,CAAY,IAAI,QAAQ,CAAA;AAC7B,IAAA,OAAO,MAAM;AACX,MAAK,IAAA,CAAA,WAAA,CAAY,OAAO,QAAQ,CAAA;AAAA,KAClC;AAAA;AACF,EAEA,QAAW,GAAA;AACT,IAAA,OAAO,IAAK,CAAA,KAAA;AAAA;AACd,EAEA,MAAM,MAAO,CAAA,GAAA,EAAa,QAAoB,EAAA;AAC5C,IAAM,MAAA,OAAA,GAAU,KAAK,WAAY,CAAA;AAAA,MAC/B,QAAU,EAAA,GAAA;AAAA,MACV,MAAQ,EAAA,EAAA;AAAA,MACR,IAAM,EAAA,EAAA;AAAA,MACN,KAAO,EAAA;AAAA,KACR,CAAA;AACD,IAAA,MAAM,KAAQ,GAAA,OAAA,CAAQ,OAAQ,CAAA,MAAA,GAAS,CAAC,CAAA;AAExC,IAAI,IAAA,CAAC,KAAO,EAAA,KAAA,CAAM,MAAQ,EAAA;AACxB,MAAA,MAAM,IAAI,KAAA,CAAM,CAAuB,oBAAA,EAAA,GAAG,CAAE,CAAA,CAAA;AAAA;AAG9C,IAAA,IAAA,CAAK,QAAS,CAAA;AAAA,MACZ,GAAG,IAAK,CAAA,KAAA;AAAA,MACR,UAAY,EAAA,EAAE,KAAO,EAAA,YAAA,EAAc,QAAS;AAAA,KAC7C,CAAA;AAED,IAAI,IAAA;AACF,MAAA,MAAM,UAAa,GAAA,MAAM,KAAM,CAAA,KAAA,CAAM,OAAO,QAAQ,CAAA;AACpD,MAAA,IAAA,CAAK,QAAS,CAAA;AAAA,QACZ,GAAG,IAAK,CAAA,KAAA;AAAA,QACR,UAAA,EAAY,EAAE,CAAC,KAAM,CAAA,KAAA,CAAM,MAAM,KAAM,CAAA,KAAA,CAAM,IAAI,GAAG,UAAW,EAAA;AAAA,QAC/D,UAAA,EAAY,EAAE,KAAA,EAAO,MAAO;AAAA,OAC7B,CAAA;AAAA,aACM,KAAO,EAAA;AACd,MAAA,IAAA,CAAK,QAAS,CAAA;AAAA,QACZ,GAAG,IAAK,CAAA,KAAA;AAAA,QACR,MAAA,EAAQ,EAAE,CAAC,KAAM,CAAA,KAAA,CAAM,MAAM,KAAM,CAAA,KAAA,CAAM,IAAI,GAAG,KAAM,EAAA;AAAA,QACtD,UAAA,EAAY,EAAE,KAAA,EAAO,MAAO;AAAA,OAC7B,CAAA;AAAA;AACH;AAEJ;ACpHA,IAAM,aAAA,GAAgBC,oBAA6B,IAAI,CAAA;AAEhD,SAAS,cAAe,CAAA;AAAA,EAC7B,MAAA;AAAA,EACA;AACF,CAGG,EAAA;AACD,EAAA,MAAM,CAAC,KAAO,EAAA,QAAQ,IAAIC,cAAsB,CAAA,MAAA,CAAO,UAAU,CAAA;AAEjE,EAAAC,eAAA,CAAU,MAAM;AACd,IAAO,OAAA,MAAA,CAAO,UAAU,MAAM;AAC5B,MAAS,QAAA,CAAA,MAAA,CAAO,UAAU,CAAA;AAAA,KAC3B,CAAA;AAAA,GACH,EAAG,CAAC,MAAM,CAAC,CAAA;AAEX,EAAA,uBACGC,cAAA,CAAA,aAAA,CAAc,QAAd,EAAA,EAAuB,OAAO,MAC5B,EAAA,QAAA,EAAA,KAAA,CAAM,UAAW,CAAA,KAAA,KAAU,SAAY,mBAAAA,cAAA,CAAC,KAAI,EAAA,EAAA,QAAA,EAAA,YAAA,EAAU,IAAS,QAClE,EAAA,CAAA;AAEJ;AAEO,SAAS,SAAY,GAAA;AAC1B,EAAM,MAAA,MAAA,GAASC,iBAAW,aAAa,CAAA;AACvC,EAAA,IAAI,CAAC,MAAQ,EAAA;AACX,IAAM,MAAA,IAAI,MAAM,gDAAgD,CAAA;AAAA;AAElE,EAAO,OAAA,MAAA;AACT;AAEO,SAAS,WAAc,GAAA;AAC5B,EAAA,MAAM,SAAS,SAAU,EAAA;AACzB,EAAA,OAAO,CAAC,EAAe,KAAA;AACrB,IAAO,MAAA,CAAA,QAAA,CAAS,EAAE,QAAA,EAAU,EAAI,EAAA,MAAA,EAAQ,IAAI,IAAM,EAAA,EAAA,EAAI,KAAO,EAAA,IAAA,EAAM,CAAA;AAAA,GACrE;AACF;AAEO,SAAS,cAA2B,OAAoB,EAAA;AAC7D,EAAA,MAAM,SAAS,SAAU,EAAA;AACzB,EAAM,MAAA,KAAA,GAAQ,OAAO,QAAS,EAAA;AAC9B,EAAO,OAAA,KAAA,CAAM,WAAW,OAAO,CAAA;AACjC;AAEO,SAAS,cAA2B,OAAgC,EAAA;AACzE,EAAA,MAAM,SAAS,SAAU,EAAA;AACzB,EAAM,MAAA,KAAA,GAAQ,OAAO,QAAS,EAAA;AAC9B,EAAO,OAAA,KAAA,CAAM,WAAW,OAAO,CAAA;AACjC;AAEO,SAAS,IAAK,CAAA;AAAA,EACnB,MAAA;AAAA,EACA,QAAA;AAAA,EACA,MAAS,GAAA;AACX,CAIG,EAAA;AACD,EAAA,MAAM,SAAS,SAAU,EAAA;AAEzB,EAAM,MAAA,YAAA,GAAe,OAAO,KAA4C,KAAA;AACtE,IAAA,KAAA,CAAM,cAAe,EAAA;AACrB,IAAA,MAAM,QAAW,GAAA,IAAI,QAAS,CAAA,KAAA,CAAM,aAAa,CAAA;AACjD,IAAM,MAAA,MAAA,CAAO,MAAO,CAAA,MAAA,EAAQ,QAAQ,CAAA;AAAA,GACtC;AAEA,EAAA,uBACGD,cAAA,CAAA,MAAA,EAAA,EAAK,QAAU,EAAA,YAAA,EAAc,QAC3B,QACH,EAAA,CAAA;AAEJ;AAEO,SAAS,IAAK,CAAA;AAAA,EACnB,EAAA;AAAA,EACA,QAAA;AAAA,EACA,GAAG;AACL,CAIG,EAAA;AACD,EAAA,MAAM,SAAS,SAAU,EAAA;AAEzB,EAAM,MAAA,WAAA,GAAc,CAAC,KAA+C,KAAA;AAClE,IAAA,KAAA,CAAM,cAAe,EAAA;AACrB,IAAO,MAAA,CAAA,QAAA,CAAS,EAAE,QAAA,EAAU,EAAI,EAAA,MAAA,EAAQ,IAAI,IAAM,EAAA,EAAA,EAAI,KAAO,EAAA,IAAA,EAAM,CAAA;AAAA,GACrE;AAEA,EACE,uBAAAA,cAAA,CAAC,OAAE,IAAM,EAAA,EAAA,EAAI,SAAS,WAAc,EAAA,GAAG,OACpC,QACH,EAAA,CAAA;AAEJ","file":"index.js","sourcesContent":["import {\n  createBrowserHistory,\n  History,\n  Location as HistoryLocation,\n} from \"history\";\nimport { RouterOptions, RouterState, RouteObject, Location } from \"./types\";\n\nexport class Router {\n  private history: History;\n  private routes: RouteObject[];\n  private state: RouterState;\n  private subscribers: Set<() => void>;\n\n  constructor(options: RouterOptions) {\n    this.history = createBrowserHistory();\n    this.routes = options.routes;\n    this.subscribers = new Set();\n\n    this.state = {\n      location: this.history.location,\n      navigation: { state: \"idle\" },\n      loaderData: {},\n      actionData: {},\n      errors: {},\n    };\n\n    this.history.listen(({ location }: { location: HistoryLocation }) => {\n      this.navigate(location);\n    });\n  }\n\n  public async navigate(location: Location) {\n    this.setState({\n      ...this.state,\n      navigation: { state: \"loading\", location },\n    });\n\n    const matches = this.matchRoutes(location);\n    const loaderData: Record<string, unknown> = {};\n    const errors: Record<string, unknown> = {};\n\n    for (const match of matches) {\n      const route = match.route;\n      if (route.loader) {\n        try {\n          loaderData[route.id || route.path] = await route.loader();\n        } catch (error) {\n          errors[route.id || route.path] = error;\n        }\n      }\n    }\n\n    this.setState({\n      location,\n      navigation: { state: \"idle\" },\n      loaderData,\n      actionData: {},\n      errors,\n    });\n  }\n\n  private matchRoutes(\n    location: Location,\n  ): { route: RouteObject; params: Record<string, string> }[] {\n    // Simple path matching implementation\n    // TODO: Implement full path matching with params\n    return this.routes\n      .filter((route) => route.path === location.pathname)\n      .map((route) => ({ route, params: {} }));\n  }\n\n  private setState(newState: RouterState) {\n    this.state = newState;\n    this.subscribers.forEach((subscriber) => subscriber());\n  }\n\n  subscribe(callback: () => void) {\n    this.subscribers.add(callback);\n    return () => {\n      this.subscribers.delete(callback);\n    };\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  async submit(url: string, formData: FormData) {\n    const matches = this.matchRoutes({\n      pathname: url,\n      search: \"\",\n      hash: \"\",\n      state: null,\n    });\n    const match = matches[matches.length - 1];\n\n    if (!match?.route.action) {\n      throw new Error(`No action found for ${url}`);\n    }\n\n    this.setState({\n      ...this.state,\n      navigation: { state: \"submitting\", formData },\n    });\n\n    try {\n      const actionData = await match.route.action(formData);\n      this.setState({\n        ...this.state,\n        actionData: { [match.route.id || match.route.path]: actionData },\n        navigation: { state: \"idle\" },\n      });\n    } catch (error) {\n      this.setState({\n        ...this.state,\n        errors: { [match.route.id || match.route.path]: error },\n        navigation: { state: \"idle\" },\n      });\n    }\n  }\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { Router } from \"./router\";\nimport { RouterState } from \"./types\";\n\nconst RouterContext = createContext<Router | null>(null);\n\nexport function RouterProvider({\n  router,\n  children,\n}: {\n  router: Router;\n  children?: React.ReactNode;\n}) {\n  const [state, setState] = useState<RouterState>(router.getState());\n\n  useEffect(() => {\n    return router.subscribe(() => {\n      setState(router.getState());\n    });\n  }, [router]);\n\n  return (\n    <RouterContext.Provider value={router}>\n      {state.navigation.state === \"loading\" ? <div>Loading...</div> : children}\n    </RouterContext.Provider>\n  );\n}\n\nexport function useRouter() {\n  const router = useContext(RouterContext);\n  if (!router) {\n    throw new Error(\"useRouter must be used within a RouterProvider\");\n  }\n  return router;\n}\n\nexport function useNavigate() {\n  const router = useRouter();\n  return (to: string) => {\n    router.navigate({ pathname: to, search: \"\", hash: \"\", state: null });\n  };\n}\n\nexport function useLoaderData<T = unknown>(routeId: string): T {\n  const router = useRouter();\n  const state = router.getState();\n  return state.loaderData[routeId] as T;\n}\n\nexport function useActionData<T = unknown>(routeId: string): T | undefined {\n  const router = useRouter();\n  const state = router.getState();\n  return state.actionData[routeId] as T;\n}\n\nexport function Form({\n  action,\n  children,\n  method = \"post\",\n}: {\n  action: string;\n  children: React.ReactNode;\n  method?: \"post\" | \"get\";\n}) {\n  const router = useRouter();\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    await router.submit(action, formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} method={method}>\n      {children}\n    </form>\n  );\n}\n\nexport function Link({\n  to,\n  children,\n  ...props\n}: {\n  to: string;\n  children: React.ReactNode;\n  [key: string]: unknown;\n}) {\n  const router = useRouter();\n\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    router.navigate({ pathname: to, search: \"\", hash: \"\", state: null });\n  };\n\n  return (\n    <a href={to} onClick={handleClick} {...props}>\n      {children}\n    </a>\n  );\n}\n"]}